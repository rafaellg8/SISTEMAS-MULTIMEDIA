package sm.rlg.iu;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import java.awt.Color;
import java.awt.Graphics;
import java.awt.Point;
import java.awt.Graphics2D;
import java.awt.Shape;
import static java.lang.Math.abs;

/**
 *
 * @author rafa
 */
public class Lienzo extends javax.swing.JPanel {

    private Point p; //punto p
    private Point fin;
    
    private int forma; //1 punto 2 linea 3 circulo 4 cuadrado
    
    private boolean relleno;
    
    private Color color;
    
    public Lienzo() {
        initComponents();
        forma=0;
    }

     @Override
    public void paint(Graphics g){
        super.paint(g);
    }

    public void paint(Graphics g,Point p1,Point p2){ //Sobrecarga del metodo paint dibujar lineas
         if (p1 != null && p2 != null){
         super.paint(g);
         
         g.setColor(color);
         int width; int height;
        int esquinax = 0,esquinay = 0;
        
        //Cambia solo Y es decir parte de abajo
         if (p2.y < p1.y){
         esquinax = p1.x;
         esquinay = p2.y;
         }
        
         //Cambia solo la X es decir parte izda
         if (p2.x < p1.x){
            esquinax = p2.x;
            esquinay = p1.y;
        }
         
        //Cambia la X y la Y es decir esquina superior izda 
        if ((p2.x < p1.x) && (p2.y < p1.y)){
            esquinax = p2.x;
            esquinay = p2.y;
        }
         
        
        width= abs(p2.x - p1.x);
           
        height = abs(p2.y - p1.y);
       
        if (relleno == false)
        switch (forma){
            case 1:
                g.fillOval(p1.x, p1.y, 10, 10); 
            break;
            case 2:
                 g.drawLine(p1.x, p1.y, p2.x, p2.y);
            break;
            case 3:
                if ((p2.x < p1.x) || (p2.y < p1.y))
                    g.drawOval(esquinax, esquinay, width, height);
                else
                    g.drawOval(p1.x, p1.y, width, height);
            break;
            case 4:
                 if ((p2.x < p1.x) || (p2.y < p1.y))
                    g.drawRect(esquinax, esquinay, width, height); 
                else
                    g.drawRect(p1.x, p1.y, width, height);
            break;
        } 
        
        else
             switch (forma){
            case 1:
                g.fillOval(p1.x, p1.y, 10, 10); 
            break;
            case 2:
                 g.drawLine(p1.x, p1.y, p2.x, p2.y);
            break;
             case 3:
                if ((p2.x < p1.x) || (p2.y < p1.y))
                    g.fillOval(esquinax, esquinay, width, height);
                else
                    g.fillOval(p1.x, p1.y, width, height);
            break;
            case 4:
                 if ((p2.x < p1.x) || (p2.y < p1.y))
                    g.fillRect(esquinax, esquinay, width, height); 
                else
                    g.fillRect(p1.x, p1.y, width, height);
        } 
       }
    }
    
    public void setColor(Color col){
        color = col;
    }
    
    public Color getColor(Color col){
       return color;
    }
    
    public int getForma(){
        return forma;
    }
    
    public void setFormaDefecto(){
        forma = 0;
    }
    
    public void setLapiz(){
         forma=1;
    }
    

    
     public void setOvalo(){
       forma = 3;
      
    }
     
     public void setLinea(){ //Si volvemos a accionar el boton y esta seleccionado
       forma = 2;
    }
    
    
     public void setCuadrado(){ //Si volvemos a accionar el boton y esta seleccionado
         forma = 4;
    }
     
    
    public void setRelleno(){
        relleno = this.relleno == false;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        FormListener formListener = new FormListener();

        setBackground(java.awt.Color.white);
        setMinimumSize(new java.awt.Dimension(200, 300));
        addMouseMotionListener(formListener);
        addMouseListener(formListener);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.MouseListener, java.awt.event.MouseMotionListener {
        FormListener() {}
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            if (evt.getSource() == Lienzo.this) {
                Lienzo.this.formMouseClicked(evt);
            }
        }

        public void mouseEntered(java.awt.event.MouseEvent evt) {
        }

        public void mouseExited(java.awt.event.MouseEvent evt) {
        }

        public void mousePressed(java.awt.event.MouseEvent evt) {
            if (evt.getSource() == Lienzo.this) {
                Lienzo.this.formMousePressed(evt);
            }
        }

        public void mouseReleased(java.awt.event.MouseEvent evt) {
            if (evt.getSource() == Lienzo.this) {
                Lienzo.this.formMouseReleased(evt);
            }
        }

        public void mouseDragged(java.awt.event.MouseEvent evt) {
            if (evt.getSource() == Lienzo.this) {
                Lienzo.this.formMouseDragged(evt);
            }
        }

        public void mouseMoved(java.awt.event.MouseEvent evt) {
        }
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        p = evt.getPoint(); //Obtenemos el punto
        this.paint(this.getGraphics(), p,p);  
    }//GEN-LAST:event_formMouseClicked

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
         fin = evt.getPoint();
       this.paint(this.getGraphics(), p, fin);
    }//GEN-LAST:event_formMouseDragged

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
         p = evt.getPoint();
    }//GEN-LAST:event_formMousePressed

    private void formMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseReleased
        this.paint(this.getGraphics(), p, fin);
    }//GEN-LAST:event_formMouseReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

}
